<!--
  Xavier Demompion : xavier.demompion@mobile-devices.fr
  Mobile Devices 2013
-->

<div class="well info row well-small">

  <div class="pull-left" >
    <a class="btn btn-primary"  data-toggle="tooltip" title="Flush event log file" href="/clear_daemon_log">clear server log</a>
  </div>

  <div class="pull-left" style="margin-top:5px;margin-left:10px">
    <i class="icon-th"></i> : SERVER
    <i class="icon-star"></i> : PRESENCE
    <i class="icon-envelope"></i> : MESSAGE
    <i class="icon-road"></i> TRACK
    <i class="icon-fire"></i> : ORDER
    <i class="icon-list"></i> : COLLECTION
    <i class="icon-share"></i> : ACK
  </div>


  <div class="pull-right">


    <% if is_log_show_server() == 'true' %>
      <a class="btn btn-success" data-toggle="tooltip" title="Hide all events about the SERVER itself" href="/log_show_server_hide">
    <% else %>
      <a class="btn btn-success disabled" data-toggle="tooltip" title="Show all events about the SERVER itself" href="/log_show_server_show">
    <% end %>
      <i class="icon-eye-open"></i> <i class="icon-th"></i>
    </a>

    <% if is_log_show_com() == 'true' %>
      <a class="btn btn-success" data-toggle="tooltip" title="Hide all events about communication" href="/log_show_com_hide">
    <% else %>
      <a class="btn btn-success disabled" data-toggle="tooltip" title="Show all events about communication" href="/log_show_com_show">
    <% end %>
      <i class="icon-eye-open"></i>
    </a>


    <% if is_log_show_process() == 'true' %>
      <a class="btn btn-info" data-toggle="tooltip" title="Hide all events about processing" href="/log_show_process_hide">
    <% else %>
      <a class="btn btn-info disabled" data-toggle="tooltip" title="Show all events about processing" href="/log_show_process_show">
    <% end %>
      <i class="icon-eye-open"></i>
    </a>

    <% if is_log_show_error() == 'true' %>
      <a class="btn btn-danger" data-toggle="tooltip" title="Hide all events about errors" href="/log_show_error_hide">
    <% else %>
      <a class="btn btn-danger disabled" data-toggle="tooltip" title="Show all events about errors" href="/log_show_error_show">
    <% end %>
      <i class="icon-eye-open"></i>
    </a>

  </div>
</div>



<div class="row" id="main_panel">


  <!-- div buttons -->
  <div class="span4" id="sdkLogButtons" style="height:100%;overflow-y: auto" > <!-- style="height:700px;overflow-y: auto" -->
  </div>

  <!-- div log -->
  <div class="span8" id="divLog" style="height:100%;overflow-y: auto">
    <div id="view_title" style="padding-bottom:15px;">
      <i class="icon-arrow-left"></i><em> Click on buttons for details.</em>
    </div>

    <small>
      <div id="view_code" class="" ><!--  data-spy="affix" data-offset-top="40"  style="overflow-y: auto;height:650px" -->
      </div>
    </small>
  </div>

</div>

<!--

<div class="row-fluid">

  <div class="span4" id="sdkLogButtons">
  </div>

  <div class="span8">
    <small>
      Note : your log.debug('...') will be drop in production, avoid put useful logs as debug, put them as info instead.
      <div id="view_code" class="" data-spy="affix" data-offset-top="40" style="width:800px;height:700px;overflow-y: scroll">
        <i class="icon-arrow-left"></i><em> Click on buttons for details.</em>
      </div>
    </small>
  </div>
</div>


-->

<!-- Scripts ===================================================================-->
  <script>
    function escapeHTML(text) {   return text.replace(/[&<>"'`]/g, function (chr) {     return '&#' + chr.charCodeAt(0) + ';';   }); };

    function resizeElementHeight(element) {
      var height = 0;
      var body = window.document.body;
      if (window.innerHeight) {
          height = window.innerHeight;
      } else if (body.parentElement.clientHeight) {
          height = body.parentElement.clientHeight;
      } else if (body && body.clientHeight) {
          height = body.clientHeight;
      }
      element.style.height = ((height - element.offsetTop) + "px");
    }


    $(document).ready(function() {

      // manage dynamic change of button list
      (function logSdkAgentsPunk() {
        (function updater() {
          $.ajax({
            url: '/gen_sdk_log_buttons',
            type: "GET",
            success: function(data) {
              $('#sdkLogButtons').html(data);
            },
            error: function(xhr, status, errorThrown) {
              console.error("Error: " + status + " (" + errorThrown + ") ---- " + xhr)
            },
            complete: function() {
              setTimeout(updater, 4000);

              // re bind all button to view content of an PUNK button
              $("button[data-bind=btn]").bind('click', function() {
                console.log('click a button !!!')
                var title = $('#btn_title_' + $(this).data('content')).text();

                var content = $('#btn_content_' + $(this).data('content'));
                try{
                  var lines = $.parseJSON(content.text());
                } catch (err) {
                  console.error("Trying to parse \n" + content.text() + "\n\n");
                  console.error("but failed with " + err + "\n");
                  return null;
                }


                var sanitizedLines = lines.map(function(line){ return escapeHTML(line)Â });

                // colorise logs
                spn_debug = "label"
                spn_info = "label label-info"
                spn_warn = "label label-warning"
                spn_err = "label label-important"

                for (var i = 0; i < sanitizedLines.length; i++) {
                  sanitizedLines[i] = sanitizedLines[i].replace('D, [','<span class="' + spn_debug + '"> debug</span> ')
                  sanitizedLines[i] = sanitizedLines[i].replace('I, [','<span class="' + spn_info + '"> info</span> ')
                  sanitizedLines[i] = sanitizedLines[i].replace('W, [','<span class="' + spn_warn + '"> WARN</span> ')
                  sanitizedLines[i] = sanitizedLines[i].replace('E, [','<span class="' + spn_err + '"> !! ERROR !!</span> ')

                  // bolt if agent debug line
                  if (sanitizedLines[i].indexOf(' -- : Agent ') > 0) {
                    sanitizedLines[i] = '<b>' + sanitizedLines[i] + '</b>'
                  }
                }

                $("#view_title").html(title)
                $("#view_code").html(sanitizedLines.join('<br />'));

              });

            }
          });
        })(); // function updater and run it
      })(); // function layout and run it

    });

    // $('.someElement').height(); // returns the calculated pixel height of the element(s)
    // $(window).height();         // returns height of browser viewport
    // $(document).height();       // returns height of HTML document

    $(document).ready(function() {
      var winHeight = $(window).height();
      document.getElementById("sdkLogButtons").style.height= (winHeight-150) +'px';
      document.getElementById("divLog").style.height= (winHeight-150) +'px';
    });



  </script>
<!-- End scripts ===============================================================-->
